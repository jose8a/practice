#!/usr/bin/ruby

# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed 
# four million, find the sum of the even-valued terms.
#
#

# TODO - advanced? --> using yield statement to generate values
def fib (max_range)
	fib_n0 = 0
	fib_n1 = 1
	fib_n2 = 0

	while fib_n2 < max_range
		fib_n2 = fib_n1 + fib_n0
		fib_n1, fib_n0 = fib_n2, fib_n1
		if (fib_n2 % 2 == 0)
			yield fib_n2
		end
	end
	return 0
end

sum = 0
max_range = 4000000
fib(max_range) {|fibnum| sum += fibnum}
#fib(4000000) {|fibnum| puts "#{fibnum}"}
puts "sum of even fibs up to #{max_range} is #{sum}" 