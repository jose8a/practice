## `silly_years`
Write a function that takes a year (four digit integer) and returns an
array with the 10 closest subsequent years that meet the following
condition: the first two digits summed with the last two digits are
equal to the middle two digits. E.g.,

    1978 => 19 + 78 = 97
    2307 => 23 + 07 = 30

## `pair_sum`
Given an array of integers, return all pairs that sum up to a
specified value `k`. List the pairs in `[min, max]` order.

## `matrix_region_sum`
Given a matrix of integers and coordinates of a rectangular region
within the matrix, find the sum of numbers falling inside the
rectangle.

## `merge_sort`
Implement merge sort.

## `binary_search`
Implement binary search

## `productify`
Given a list of numbers in an array, replace all the numbers with the
product of all other numbers. Do this in `O(n)` time **without using
division**.

## `subsets`
Write a function that takes an array and returns all of its
subsets. How many sets will it return?

## `longest_palindrome`
Write a function that will take a string and return the indices of the
start/end of the longest palindrome it contains.

Your palindrome checker could reverse the string and compare it to the
original, but that takes extra memory (that takes `O(n)` extra
memory). Instead, you should be able to solve the problem with `O(1)`
memory.




